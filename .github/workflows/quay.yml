name: Test Automatic Deployment

env:
  REGISTRY: quay.io/zalsaffa
  REGISTRY_USER: zalsaffa
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  IMAGE_NAME: iib-deployment
  IMAGE_TAG: latest

on:
  pull_request:
    types: [closed]
    paths-ignore:
      - '**.md'
      - '**.yml'
      - '.github/**'
    branches:
      - main

jobs:
  # this job will only be triggered when a PR is merged
  deployments:
    if: github.event.pull_request.merged == true 
    name: Build and Push to Quay
    runs-on: ubuntu-20.04

    steps:
      # Print out the PR number 
      - name: Print out the PR number 
        run: |
          echo PR #${{ github.event.number }}

      # Checks out a copy of the repo on the ubuntu-20.04 machine
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install buildah 1.19
        shell: bash
        run: |
          sudo apt-get remove buildah
          sudo apt-get -y install software-properties-common
          sudo add-apt-repository -y ppa:alexlarsson/flatpak
          sudo apt-get -y -qq update
          sudo apt-get -y install bats libapparmor-dev libdevmapper-dev libglib2.0-dev libgpgme11-dev libseccomp-dev libselinux1-dev skopeo-containers go-md2man
          sudo apt-get -y install golang-1.13
          mkdir ~/buildah
          cd ~/buildah
          export GOPATH=`pwd`
          git clone https://github.com/containers/buildah ./src/github.com/containers/buildah
          cd ./src/github.com/containers/buildah
          git checkout release-1.19
          PATH=/usr/lib/go-1.13/bin:$PATH make runc all SECURITYTAGS="apparmor seccomp"
          sudo make install install.runc
          buildah version

      # Build image using Dockerfile
      # https://github.com/redhat-actions/buildah-build/blob/main/README.md
      - name: Build an Image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}
          dockerfiles: |
            ./Dockerfile

      # Push the image to the registry
      # https://github.com/redhat-actions/push-to-registry/blob/main/README.md
      - name: Push To Red Hat Registry, Quay
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2.1.1
        with:
          image: ${{ env.IMAGE_NAME }}
          tag: ${{ env.IMAGE_TAG }}
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Print out the path the image was pushed to
        run: echo "New image has been pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"